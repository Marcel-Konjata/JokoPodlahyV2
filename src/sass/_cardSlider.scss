.card-slider {
  margin: 50px 10px 50px auto;
  width: 100%;
  overflow: hidden; // important for animations efect for switch between the cards 
  transform-origin: center;
  position: relative;
  /* animation for transition grouo in react after switch between info and cards*/
  &.anime-cards-enter {
    transform: translateX(100%) rotate(45deg) scale(.5);
   opacity: 0;
   
  }
  &.anime-cards-enter-active {
    transform: translateX(0) rotate(24deg) scale(.5);
    opacity: 0.5; 
    transition: all ease-in-out 500ms ;
    
  }
  &.anime-cards-enter-done {
    transform: translateX(0) rotate(0) scale(1);
    opacity: 1; 
    transition: all ease-in-out 200ms;
  }
  &.anime-cards-exit {
    transform: translateX(0%) rotate(45deg) scale(.5);
    opacity: .5;
    transition: all ease-in-out 200ms;
   
  }
  &.anime-cards-exit-active {
    transform:  translateX(100%) rotate(24deg) scale(.5) ;
    opacity: 0;
    transition: all ease-in 500ms;
  }
  &.anime-cards-exit-done {
    transform: translateX(-100%) rotate(24deg) scale(.5) ;
    opacity: 0;
    
  }

  // allows to stick two cards component next to each other and animate the translate on X axis
  .slider-row {
    display: flex;
    flex-wrap: nowrap;
    width: 200%;
  }
  .card-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
// ------------------------------------------------------------------------------------------------
    .smallCard {
      box-shadow: 16px 4px 10px rgba(0, 0, 0, 0.32);
      position: relative;
      display: inline-block;
      border-radius: 10px;
      border: 2px solid transparent;
      position: relative;
      overflow: hidden;
      max-width: 371px;
      max-height: 460px;
      z-index: 2;
      margin-right: -20%;
      img {
        width: 100%;
        height: 100%;
      }
      .btn-doubleCard {
        background: rgba(0, 0, 0, 0.623);
        color: white;
        border: 1px solid grey;
        padding: 10px;
        margin-bottom: 5px;

        cursor: pointer;
        & > svg {
          pointer-events: none; //fixing svg nesting inside btn -- default state prevents delegating of events
        }
      }
      .btn-next {
        position: absolute;
        bottom: 0;
        right: 0;
        margin-right: 5px;
      }
      .btn-previous {
        position: absolute;
        left: 0;
        bottom: 0;
        margin-left: 5px;
      }
    }
    .largeCard {
      
      border-radius: 10px;
      border: 2px solid transparent;
      max-width: 452px;
      max-height: 560px;
      overflow: hidden;
      display: inline-block;
      img {
        width: 100%;
        height: 100%;
      }
    }
  }
}

// animations for changing state of slides

.next{
  animation: wrp-next 1s ease forwards;
  &:nth-of-type(2)>.smallCard{
    animation: card-next 1s  ease forwards;
  }
}
.previous{
  animation: wrp-prev 1s ease forwards;
  &:nth-of-type(1)>.smallCard{
    animation: card-prev 1s  ease forwards;
  }
}


@keyframes wrp-next{
  0%{
    transform: translate(0);
  }
  100%{
    transform: translate(-100%);
  }
}

@keyframes card-next{
  0%{
    transform: translate(150%)
  }
  100%{
    transform: translate(0)
  }
}

@keyframes wrp-prev{
  0%{
    transform: translate(-100%);
  }
  100%{
    transform: translate(0%);
  }
}

@keyframes card-prev{
  0%{
    transform: translate(-150%)
  }
  100%{
    transform: translate(0%)
  }
}